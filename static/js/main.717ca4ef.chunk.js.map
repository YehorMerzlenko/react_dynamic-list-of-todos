{"version":3,"sources":["components/SearchField/SearchField.jsx","components/TodoList/TodoList.jsx","utils/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["SearchField","handleFilterChange","query","status","handleChange","className","aria-label","name","onChange","value","htmlFor","type","id","placeholder","TodoList","state","selectedTodoId","event","setState","target","filterByTitle","todo","title","toLowerCase","includes","filterByStatus","completed","todoId","userId","this","props","selectUser","todos","filtredTodos","filter","map","key","readOnly","onClick","selectedUser","React","Component","defaultProps","PropTypes","arrayOf","shape","request","url","fetch","then","res","ok","Error","json","catch","CurrentUser","user","loadUser","prevProps","a","response","data","phone","email","clearUser","App","selectedUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.717ca4ef.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchField = ({\n  handleFilterChange,\n  query,\n  status,\n  handleChange,\n}) => (\n  <>\n    <select\n      className=\"form-select\"\n      aria-label=\"Default select example\"\n      name=\"status\"\n      onChange={handleChange}\n      value={status}\n    >\n      <option value=\"all\">All</option>\n      <option value=\"active\">Active</option>\n      <option value=\"completed\">Complete</option>\n    </select>\n    <div className=\"box\">\n      <div className=\"field\">\n        <label htmlFor=\"search-query\" className=\"label\">\n          Search todo\n        </label>\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            id=\"search-query\"\n            className=\"form-control\"\n            placeholder=\"Type search word\"\n            onChange={handleFilterChange}\n            value={query}\n          />\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nSearchField.propTypes = {\n  handleFilterChange: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport { SearchField } from '../SearchField';\n\nexport class TodoList extends React.Component {\n  state = {\n    selectedTodoId: 0,\n    query: '',\n    status: '',\n  }\n\n  handleFilterChange = (event) => {\n    this.setState({\n      query: event.target.value,\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      status: event.target.value,\n    });\n  };\n\n  filterByTitle = (todo) => {\n    const { query } = this.state;\n\n    if (todo.title !== null) {\n      return todo.title.toLowerCase().includes(query.toLowerCase());\n    }\n\n    return null;\n  }\n\n  filterByStatus = (todo) => {\n    const { status } = this.state;\n\n    if (status === 'completed') {\n      return todo.completed;\n    }\n\n    if (status === 'active') {\n      return !todo.completed;\n    }\n\n    return true;\n  };\n\n  selectedUser(todoId, userId) {\n    this.setState({ selectedTodoId: todoId });\n    this.props.selectUser(userId);\n  }\n\n  render() {\n    const {\n      filterByTitle,\n      filterByStatus,\n      handleChange,\n      handleFilterChange,\n    } = this;\n    const { todos } = this.props;\n    const { query, status } = this.state;\n\n    const filtredTodos = todos.filter(filterByTitle).filter(filterByStatus);\n\n    return (\n      <div className=\"TodoList\">\n        <SearchField\n          handleFilterChange={handleFilterChange}\n          handleChange={handleChange}\n          query={query}\n          status={status}\n        />\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filtredTodos.map(todo => (\n              <li\n                className={todo.completed\n                  ? 'TodoList__item TodoList__item--unchecked'\n                  : 'TodoList__item TodoList__item--checked'}\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  onClick={() => this.selectedUser(todo.id, todo.userId)}\n                  className={this.state.selectedTodoId !== todo.id\n                    ? `TodoList__user-button\n                      TodoList__user-button--unselected\n                      button`\n                    : `TodoList__user-button\n                      TodoList__user-button--selected\n                      button`\n                  }\n                  type=\"button\"\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.defaultProps = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    completed: true,\n    title: null,\n    userId: null,\n    id: null,\n  })),\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ),\n  selectUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = url => fetch(`${BASE_URL}${url}`)\n  .then((res) => {\n    if (!res.ok) {\n      throw new Error('Error');\n    }\n\n    return res.json();\n  })\n  .catch(() => []);\n\nexport const getTodos = () => request('/todos')\n  .then(response => response.data);\n\nexport const getUser = userId => request(`/users/${userId}`)\n  .then(response => response.data);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../utils';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    return this.loadUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { userId } = this.props;\n\n    if (prevProps.userId === userId) {\n      return null;\n    }\n\n    return this.loadUser();\n  }\n\n  async loadUser() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { name, phone, email, id } = this.state.user;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          onClick={() => clearUser()}\n          className=\"TodoList__user-button\n            TodoList__user-button--unselected\n            button\"\n          type=\"button\"\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './utils';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos().then(todos => this.setState({ todos }));\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n    const { selectUser, clearUser } = this;\n\n    return (\n      <>\n        <div className=\"App\">\n          <div className=\"App__sidebar\">\n            <TodoList\n              todos={todos}\n              selectUser={selectUser}\n              selectedUserId={selectedUserId}\n            />\n          </div>\n\n          <div className=\"App__content\">\n            <div className=\"App__content-container\">\n              {selectedUserId ? (\n                <CurrentUser\n                  userId={selectedUserId}\n                  clearUser={clearUser}\n                />\n              ) : 'No user selected'}\n            </div>\n          </div>\n        </div>\n      </>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}